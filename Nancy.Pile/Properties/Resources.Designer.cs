//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nancy.Pile.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nancy.Pile.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * CoffeeScript Compiler v1.9.1
        /// * http://coffeescript.org
        /// *
        /// * Copyright 2011, Jeremy Ashkenas
        /// * Released under the MIT License
        /// */
        ///(function(root){var CoffeeScript=function(){function require(e){return require[e]}return require[&quot;./helpers&quot;]=function(){var e={},t={exports:e};return function(){var t,n,i,r,s,o;e.starts=function(e,t,n){return t===e.substr(n,t.length)},e.ends=function(e,t,n){var i;return i=t.length,t===e.substr(e.length-i-(n||0),i)},e.repeat=s=function(e,t){var n;for(n=&quot;&quot;;t&gt;0;)1&amp;t&amp;&amp;(n+=e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CoffeeScript {
            get {
                return ResourceManager.GetString("CoffeeScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;use strict&apos;;
        ///
        ///var tsc = function(input) {
        ///  var opts = ts.getDefaultCompilerOptions();
        ///  var host = ts.createCompilerHost(opts);
        ///
        ///  var output = &apos;&apos;;
        ///  host.writeFile = function (filename, text) {
        ///    output += text;
        ///  };
        ///
        ///  host.getSourceFile = function() {
        ///    return ts.createSourceFile(&apos;&apos;, input, opts.target, &apos;0&apos;);
        ///  }
        ///
        ///  var prog = ts.createProgram([&apos;ipnput&apos;], opts, host);
        ///  prog.getDiagnostics();
        ///  var checker = prog.getTypeChecker();
        ///  checker.emitFiles();
        ///
        ///  return output;
        ///}
        ///
        ///typescriptout =  tsc(t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tsc {
            get {
                return ResourceManager.GetString("tsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! *****************************************************************************
        ///Copyright (c) Microsoft Corporation. All rights reserved. 
        ///Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use
        ///this file except in compliance with the License. You may obtain a copy of the
        ///License at http://www.apache.org/licenses/LICENSE-2.0  
        /// 
        ///THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        ///KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TypeScript {
            get {
                return ResourceManager.GetString("TypeScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! *****************************************************************************
        ///Copyright (c) Microsoft Corporation. All rights reserved. 
        ///Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use
        ///this file except in compliance with the License. You may obtain a copy of the
        ///License at http://www.apache.org/licenses/LICENSE-2.0  
        /// 
        ///THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        ///KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string typescriptServices {
            get {
                return ResourceManager.GetString("typescriptServices", resourceCulture);
            }
        }
    }
}
